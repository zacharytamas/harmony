[package]
name = "openai-harmony"
version = "0.0.3"
edition = "2021"
license = "Apache-2.0"
repository = "https://github.com/openai/harmony"
description = "OpenAI's response format for its open-weight model series gpt-oss"

[lib]
name = "openai_harmony"
crate-type = ["rlib", "cdylib"]

[features]
default = []
python-binding = ["pyo3"]
wasm-binding = ["wasm-bindgen", "serde-wasm-bindgen", "wasm-bindgen-futures"]

[dependencies]
anyhow = "1.0.98"
base64 = "0.22.1"
image = "0.25.6"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = { version = "1.0.140", features = ["preserve_order"] }
serde_with = "3.12.0"
thiserror = "2.0.12"
fancy-regex = "0.13.0"
regex = "1.10.3"
rustc-hash = "1.1.0"
bstr = "1.5.0"
sha1 = "0.10.6"
sha2 = "0.10.9"
tsify = "0.5.5"
# Use the pure-Rust `rustls` TLS backend so we don't depend on an OpenSSL
# installation on the CI runners. We disable the default features (which
# include `platform-native-tls`) and explicitly enable only the capabilities
# we need.
reqwest = { version = "0.12.5", default-features = false, features = [
    "blocking",
    "json",
    "multipart",
    "stream",
    "rustls-tls",
] }
futures = "0.3"
clap = { version = "4", features = ["derive"] }
pyo3 = { version = "0.25.0", optional = true, features = [
    "extension-module",
    "abi3-py38",
] }
wasm-bindgen = { version = "0.2.100", optional = true, features = [
    "serde-serialize",
] }
serde-wasm-bindgen = { version = "0.6.5", optional = true }
wasm-bindgen-futures = { version = "0.4.42", optional = true }

[dev-dependencies]
pretty_assertions = "1.4.1"
